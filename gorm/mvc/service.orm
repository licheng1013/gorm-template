package ${model}

import (
	"common/app"
	"common/model"
	"github.com/gin-gonic/gin"
	"gorm.io/gorm"
)

var ${serviceName} = ${name}{}

// ${name} 业务层
type ${name} struct {
}

func (t ${name}) db() *gorm.DB {
	return app.Db
}

// List 分页列表
func (t ${name}) List(page, size int, v *${entity}) gin.H  {
	lists := make([]${entity}, 0) // 结果
	t.db().Model(&${entity}{}).Where(&v).Order("").Offset((page - 1) * size).Limit(size).Find(&lists)
	var total int64	// 统计
	t.db().Model(&v).Where(&v).Count(&total)
    h := gin.H{"list": lists, "total": total}
	return h
}

// One 根据主键查询
func (t ${name}) One(id interface{}) (v ${entity}) {
	t.db().Find(&v, id)
	return
}

// Update 修改记录
func (t ${name}) Update(v ${entity})  {
    t.db().Model(&v).Updates(v)
}

// Insert 插入记录
func (t ${name}) Insert(v ${entity})  {
    t.db().Save(&v)
}

// Delete 根据主键删除
func (t ${name}) Delete(ids []int)  {
    t.db().Delete(${entity}{}, ids)
}
