package ${model}

import (
	"common/app"
	"common/model"
	"common/service"
	"github.com/gin-gonic/gin"
	"net/http"
)

func (t ${name}) init(g *gin.Engine) {
	group := g.Group("/${path}")
	group.GET("/list", t.list)
	group.GET("/one", t.one)
	group.POST("/insert", t.insert)
	group.POST("/update", t.update)
	group.POST("/delete", t.delete)
}

type ${name} struct {}

func (t ${name}) list(c *gin.Context) {
	_ = c.Bind(&t)
	var v ${entity}
	_ = c.Bind(&v)
	c.JSON(http.StatusOK, model.OkData(${servicePath}.List(t.Page, t.Size, v)))
}

func (t ${name}) one(c *gin.Context) {
	var v ${entity}
	_ = c.Bind(&v)
	c.JSON(http.StatusOK, model.OkData(${servicePath}.One(v.${id})))
}

func (t ${name}) update(c *gin.Context) {
	var v ${entity}
	_ = c.ShouldBindJSON(&v)
	${servicePath}.Update(v)
	c.JSON(http.StatusOK, model.OkMsg("修改成功！"))
}

func (t ${name}) insert(c *gin.Context) {
	var v ${entity}
	_ = c.ShouldBindJSON(&v)
	${servicePath}.Insert(v)
	c.JSON(http.StatusOK, model.OkMsg("插入成功！"))
}

func (t ${name}) delete(c *gin.Context) {
	var v ${entity}
	_ = c.ShouldBindJSON(&v)
	${servicePath}.Delete(v.Id)
	c.JSON(http.StatusOK, model.OkMsg("删除成功！"))
}
